#pragma checksum "C:\Users\user\Desktop\Androtomist\App\Views\Shared\Components\DataTableComponent\Default.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "c3e089cb9b6710fc68c7d3fd50ff8672efaabc26"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Shared_Components_DataTableComponent_Default), @"mvc.1.0.view", @"/Views/Shared/Components/DataTableComponent/Default.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Shared/Components/DataTableComponent/Default.cshtml", typeof(AspNetCore.Views_Shared_Components_DataTableComponent_Default))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c3e089cb9b6710fc68c7d3fd50ff8672efaabc26", @"/Views/Shared/Components/DataTableComponent/Default.cshtml")]
    public class Views_Shared_Components_DataTableComponent_Default : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<Androtomist.Models.Database.Datatables.DataTableHtml>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(62, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 3 "C:\Users\user\Desktop\Androtomist\App\Views\Shared\Components\DataTableComponent\Default.cshtml"
  
    Layout = null;

#line default
#line hidden
            BeginContext(91, 225, true);
            WriteLiteral("\r\n\r\n\r\n<link href=\"/assets/vendors/custom/datatables/datatables.bundle.css\" rel=\"stylesheet\" type=\"text/css\" />\r\n<link href=\"/assets/vendors/custom/datatables/buttons.dataTables.min.css\" rel=\"stylesheet\" type=\"text/css\" />\r\n\r\n");
            EndContext();
            BeginContext(320, 27, true);
            WriteLiteral("    <h3 class=\"\">\r\n        ");
            EndContext();
            BeginContext(349, 11, false);
#line 14 "C:\Users\user\Desktop\Androtomist\App\Views\Shared\Components\DataTableComponent\Default.cshtml"
    Write(Model.TITLE);

#line default
#line hidden
            EndContext();
            BeginContext(361, 13, true);
            WriteLiteral("\r\n    </h3>\r\n");
            EndContext();
#line 16 "C:\Users\user\Desktop\Androtomist\App\Views\Shared\Components\DataTableComponent\Default.cshtml"
     if (!string.IsNullOrEmpty(Model.URL_ADD))
    {

#line default
#line hidden
            BeginContext(429, 10, true);
            WriteLiteral("        <a");
            EndContext();
            BeginWriteAttribute("href", " href=\"", 439, "\"", 462, 1);
#line 18 "C:\Users\user\Desktop\Androtomist\App\Views\Shared\Components\DataTableComponent\Default.cshtml"
WriteAttributeValue("", 446, Model.URL_ADD, 446, 16, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(463, 89, true);
            WriteLiteral(" class=\"btn btn-success\">\r\n            <i class=\"fa fa-plus\"></i> Add New\r\n        </a>\r\n");
            EndContext();
#line 21 "C:\Users\user\Desktop\Androtomist\App\Views\Shared\Components\DataTableComponent\Default.cshtml"
    }

#line default
#line hidden
            BeginContext(559, 149, true);
            WriteLiteral("    <!--begin: Datatable -->\r\n    <table class=\"table table-striped- table-bordered table-hover m_table_1 CAN_FILTER\" id=\"m_table_1\" data-unique_id=\"");
            EndContext();
            BeginContext(710, 15, false);
#line 23 "C:\Users\user\Desktop\Androtomist\App\Views\Shared\Components\DataTableComponent\Default.cshtml"
                                                                                                                   Write(Model.UNIQUE_ID);

#line default
#line hidden
            EndContext();
            BeginContext(726, 19, true);
            WriteLiteral("\" data-table_type=\"");
            EndContext();
            BeginContext(747, 16, false);
#line 23 "C:\Users\user\Desktop\Androtomist\App\Views\Shared\Components\DataTableComponent\Default.cshtml"
                                                                                                                                                        Write(Model.TABLE_TYPE);

#line default
#line hidden
            EndContext();
            BeginContext(764, 59, true);
            WriteLiteral("\">\r\n        <thead>\r\n            <tr>\r\n                <th>");
            EndContext();
            BeginContext(824, 69, false);
#line 26 "C:\Users\user\Desktop\Androtomist\App\Views\Shared\Components\DataTableComponent\Default.cshtml"
               Write(Html.Raw(string.Join("</th><th>", Model.COLUMNS.Select(x => x.NAME))));

#line default
#line hidden
            EndContext();
            BeginContext(893, 124, true);
            WriteLiteral("</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody></tbody>\r\n        <tfoot>\r\n            <tr>\r\n                <th>");
            EndContext();
            BeginContext(1018, 69, false);
#line 32 "C:\Users\user\Desktop\Androtomist\App\Views\Shared\Components\DataTableComponent\Default.cshtml"
               Write(Html.Raw(string.Join("</th><th>", Model.COLUMNS.Select(x => x.NAME))));

#line default
#line hidden
            EndContext();
            BeginContext(1087, 58, true);
            WriteLiteral("</th>\r\n            </tr>\r\n        </tfoot>\r\n    </table>\r\n");
            EndContext();
            BeginContext(1149, 661, true);
            WriteLiteral(@"    <script defer src=""/assets/vendors/custom/datatables/datatables.bundle.js"" type=""text/javascript""></script>
    <script defer src=""/assets/vendors/custom/datatables/dataTables.buttons.min.js"" type=""text/javascript""></script>
    <script defer src=""/assets/vendors/custom/datatables/jszip.min.js"" type=""text/javascript""></script>
    <script defer src=""/assets/vendors/custom/datatables/pdfmake.min.js"" type=""text/javascript""></script>
    <script defer src=""/assets/vendors/custom/datatables/vfs_fonts.js"" type=""text/javascript""></script>
    <script defer src=""/assets/vendors/custom/datatables/buttons.html5.min.js"" type=""text/javascript""></script>
");
            EndContext();
            BeginContext(1816, 2755, true);
            WriteLiteral(@"    <script defer type=""text/javascript"">
        var $timeout_load_ajax;

        var DatatablesSearchOptionsColumnSearch = function () {

            var buttonCommon = {
                exportOptions: {
                    modifier: {
                        // DataTables core
                        order: 'index', // 'current', 'applied',
                        //'index', 'original'
                        page: 'all', // 'all', 'current'
                        search: 'none' // 'none', 'applied', 'removed'
                    }
                }
            };

            return {
                init: function () {
                    var t;
                    t = $(""#m_table_1"").DataTable({
                        scrollX: !0,
                        responsive: 0,
                        language: {
                            lengthMenu: ""Display _MENU_ records per page"",
                            zeroRecords: ""Nothing found - sorry"",
                            info:");
            WriteLiteral(@" ""Showing page _PAGE_ of _PAGES_ (Total _MAX_ records)"",
                            infoEmpty: ""No records available"",
                            infoFiltered: ""<span class=\""info_span\"">(filtered _TOTAL_ from _MAX_ total records)""
                        },
                        autoWidth: !0,
                        dom: ""<'row'<'col-12 dataTables_pager'lp><'col-12'i>><'row'<'col-sm-12'tr>>"",
                        buttons: [
                            $.extend(true, {}, buttonCommon, {
                                extend: 'copyHtml5',
                                exportOptions: { columns: 'th:not(:first-child, :last-child)'}
                            }),
                            $.extend(true, {}, buttonCommon, {
                                extend: 'excelHtml5',
                                exportOptions: { columns: 'th:not(:first-child, :last-child)' }
                            }),
                            $.extend(true, {}, buttonCommon, {
                    ");
            WriteLiteral(@"            extend: 'csvHtml5',
                                exportOptions: { columns: 'th:not(:first-child, :last-child)' }
                            }),
                            $.extend(true, {}, buttonCommon, {
                                extend: 'pdfHtml5',
                                exportOptions: { columns: 'th:not(:first-child, :last-child)' }
                            })],
                        lengthMenu: [5, 10, 25, 50, 100, 200, 300],
                        pageLength: 10,
                        searchDelay: 500,
                        serverSide: !0,
                        ajax: {
                            url: ""/ajax/datatable/gettable/?uniqueId=");
            EndContext();
            BeginContext(4573, 15, false);
#line 101 "C:\Users\user\Desktop\Androtomist\App\Views\Shared\Components\DataTableComponent\Default.cshtml"
                                                                 Write(Model.UNIQUE_ID);

#line default
#line hidden
            EndContext();
            BeginContext(4589, 13, true);
            WriteLiteral("&extraFilter=");
            EndContext();
            BeginContext(4604, 18, false);
#line 101 "C:\Users\user\Desktop\Androtomist\App\Views\Shared\Components\DataTableComponent\Default.cshtml"
                                                                                                Write(Model.EXTRA_FILTER);

#line default
#line hidden
            EndContext();
            BeginContext(4623, 130, true);
            WriteLiteral("\",\r\n                            type: \"POST\",\r\n                            data: {\r\n                                columnsDef: [\"");
            EndContext();
            BeginContext(4754, 65, false);
#line 104 "C:\Users\user\Desktop\Androtomist\App\Views\Shared\Components\DataTableComponent\Default.cshtml"
                                         Write(Html.Raw(string.Join("\",\"", Model.COLUMNS.Select(x => x.NAME))));

#line default
#line hidden
            EndContext();
            BeginContext(4819, 201, true);
            WriteLiteral("\"],\r\n                                json: function () {\r\n                                    return get_all_columns();\r\n                                },\r\n                                tabletype: \"");
            EndContext();
            BeginContext(5021, 26, false);
#line 108 "C:\Users\user\Desktop\Androtomist\App\Views\Shared\Components\DataTableComponent\Default.cshtml"
                                       Write(Html.Raw(Model.TABLE_TYPE));

#line default
#line hidden
            EndContext();
            BeginContext(5047, 96, true);
            WriteLiteral("\"\r\n                            }\r\n                        },\r\n                        columns: [");
            EndContext();
            BeginContext(5144, 246, false);
#line 111 "C:\Users\user\Desktop\Androtomist\App\Views\Shared\Components\DataTableComponent\Default.cshtml"
                             Write(Html.Raw(string.Join(",", Model.COLUMNS.Select(x => "{ data: \"" + x.NAME + "\", name: \"" + x.NAME + "\", title: \"" + x.TITLE + "\", searchable: " + (x.SEARCHABLE ? "true" : "false") + ", orderable: " + (x.ORDERABLE ? "true" : "false") + "}"))));

#line default
#line hidden
            EndContext();
            BeginContext(5390, 4778, true);
            WriteLiteral(@"],
                        initComplete: function (settings, json) {
                            if ($(""#m_table_1"").hasClass(""CAN_FILTER"")) {
                                var a = $('<tr class=""filter""></tr>').appendTo($(t.table().header()));
                                this.api().columns().every(function () {
                                    var e;
                                    if (this.index() < 1) {
                                        //e = $('<label class=""m-checkbox"" style=""position: absolute;top: 50%;left: 50%;margin-top: -11px;margin-left: -7px;""><input type=""checkbox"" id=""check_all""><span></span></label>');
                                        e = $('<span></span>');
                                        $(e).appendTo($('<th style=""position:relative;"" >').appendTo(a));
                                    } else if (settings.aoColumns[this.index()].searchable) {
                                        e = $('<select style=""width:100%"" class=""form-control form-control");
            WriteLiteral(@"-sm form-filter m-input"" title=""Select""  multiple=""multiple"" data-column_name=""' + settings.aoColumns[this.index()].name + '"" data-col-index=""' + this.index() + '""></select>');
                                        $(e).appendTo($(""<th>"").appendTo(a));
                                    } else {
                                        $(""<th>"").appendTo(a);
                                    }
                                });

                              //  $(a).find("".m-input"").select2(select_options_datahk).on(""change"", function () {
                              //      t.table().draw();
                              //  });
                            }

                            $(document).on(""click"", ""#select_all"", function (e) {
                                e.preventDefault();
                                $("".m-group-checkable"").prop(""checked"", true).trigger(""change"");
                            });

                            $(document).on(""click"", "".delete-row"",");
            WriteLiteral(@" function (e) {
                                e.preventDefault();
                                var rowIDs = Array();
                                rowIDs.push($(this).data(""row_id""));
                                remove_rows(rowIDs);
                            });

                            $(document).on(""click"", ""#remove_selected"", function (e) {
                                e.preventDefault();
                                var rowIDs = Array();

                                t.table().rows({ selected: true }).every(function (rowIdx, tableLoop, rowLoop) {
                                    var d = this.data();
                                    rowIDs.push($(d.ACTIONS).find("".delete-row"").data(""row_id""));
                                });
                                remove_rows(rowIDs);
                            });

                            $(document).on(""click"", "".clone-row"", function (e) {
                                e.preventDefault();
          ");
            WriteLiteral(@"                      var rowIDs = Array();
                                rowIDs.push($(this).data(""row_id""));
                                clone_rows(rowIDs);
                            });

                            $(document).on(""click"", ""#clone_selected"", function (e) {
                                e.preventDefault();
                                var rowIDs = Array();

                                t.table().rows({ selected: true }).every(function (rowIdx, tableLoop, rowLoop) {
                                    var d = this.data();
                                    rowIDs.push($(d.ACTIONS).find("".clone-row"").data(""row_id""));
                                });
                                clone_rows(rowIDs);
                            });

                            $(document).on(""click"", ""#refresh_data"", function (e) {
                                e.preventDefault();
                                t.table().ajax.reload();
                            });
");
            WriteLiteral(@"
                            $(document).on(""click"", "".export_btn"", function (e) {
                                e.preventDefault();

                                var type = ""excel"";
                                if ($(this).data('btn_id') == ""buttons-csv"")
                                    type = ""csv"";

                                var file_name = $(document).find(""title"").text();
                                file_name = file_name.replace(/ /g, '_');
                                file_name = file_name.replace('/', '-');

                                show_wait();
                                $.post(""/ajax/datatable/exporttable/?uniqueId=");
            EndContext();
            BeginContext(10170, 15, false);
#line 192 "C:\Users\user\Desktop\Androtomist\App\Views\Shared\Components\DataTableComponent\Default.cshtml"
                                                                          Write(Model.UNIQUE_ID);

#line default
#line hidden
            EndContext();
            BeginContext(10186, 13, true);
            WriteLiteral("&extraFilter=");
            EndContext();
            BeginContext(10201, 18, false);
#line 192 "C:\Users\user\Desktop\Androtomist\App\Views\Shared\Components\DataTableComponent\Default.cshtml"
                                                                                                         Write(Model.EXTRA_FILTER);

#line default
#line hidden
            EndContext();
            BeginContext(10220, 128, true);
            WriteLiteral("&export_type=\" + type + \"&file_name=\" + file_name + \"&order=\" + t.order(), {\r\n                                    columnsDef: [\"");
            EndContext();
            BeginContext(10349, 65, false);
#line 193 "C:\Users\user\Desktop\Androtomist\App\Views\Shared\Components\DataTableComponent\Default.cshtml"
                                             Write(Html.Raw(string.Join("\",\"", Model.COLUMNS.Select(x => x.NAME))));

#line default
#line hidden
            EndContext();
            BeginContext(10414, 217, true);
            WriteLiteral("\"],\r\n                                    json: function () {\r\n                                        return get_all_columns();\r\n                                    },\r\n                                    tabletype: \"");
            EndContext();
            BeginContext(10632, 26, false);
#line 197 "C:\Users\user\Desktop\Androtomist\App\Views\Shared\Components\DataTableComponent\Default.cshtml"
                                           Write(Html.Raw(Model.TABLE_TYPE));

#line default
#line hidden
            EndContext();
            BeginContext(10658, 105, true);
            WriteLiteral("\",\r\n                                    order: t.order(),\r\n                                    columns: [");
            EndContext();
            BeginContext(10764, 246, false);
#line 199 "C:\Users\user\Desktop\Androtomist\App\Views\Shared\Components\DataTableComponent\Default.cshtml"
                                         Write(Html.Raw(string.Join(",", Model.COLUMNS.Select(x => "{ data: \"" + x.NAME + "\", name: \"" + x.NAME + "\", title: \"" + x.TITLE + "\", searchable: " + (x.SEARCHABLE ? "true" : "false") + ", orderable: " + (x.ORDERABLE ? "true" : "false") + "}"))));

#line default
#line hidden
            EndContext();
            BeginContext(11010, 4202, true);
            WriteLiteral(@"]
                                }, function (data) {
                                    if (data[""result""] == ""1"") {
                                        swal.close();
                                        window.location.href = data[""msg""];
                                    } else {
                                        show_warning(data[""msg""], data[""data""]);
                                    }
                                }, 'json').fail(function () {
                                    show_error(""Cannot export layer values."", ""Something went wrong"");
                                });

                            });

                            $(document).on(""click"", "".btn_select_layer"", function (e) {
                                e.preventDefault();

                                var rowID = $(this).data(""row_id"");
                                parent.$('body').trigger('selectlayer', rowID);
                            });

                            $(do");
            WriteLiteral(@"cument).on(""click"", "".btn_select_chart"", function (e) {
                                e.preventDefault();

                                var rowID = $(this).data(""row_id"");
                                parent.$('body').trigger('selectchart', rowID);
                            });


                            $(document).on(""click"", ""#exclude_selected, #include_selected"", function (e) {
                                e.preventDefault();
                                var btn = $(this);
                                var rowIDsInclude = Array();
                                var rowIDsExclude = Array();

                                t.table().rows({ selected: false }).every(function (rowIdx, tableLoop, rowLoop) {
                                    var d = this.data();
                                    if (!$(""#"" + $(d.EXCLUDE).find("".exclude_tgi"").attr(""id"")).is("":checked""))
                                        rowIDsInclude.push($(d.EXCLUDE).find("".exclude_tgi"").attr(""id");
            WriteLiteral(@"""));
                                    else
                                        rowIDsExclude.push($(d.EXCLUDE).find("".exclude_tgi"").attr(""id""));
                                });

                                t.table().rows({ selected: true }).every(function (rowIdx, tableLoop, rowLoop) {
                                    var d = this.data();

                                    if (btn.attr(""id"") == ""include_selected"")
                                        rowIDsInclude.push($(d.EXCLUDE).find("".exclude_tgi"").attr(""id""));
                                    else
                                        rowIDsExclude.push($(d.EXCLUDE).find("".exclude_tgi"").attr(""id""));
                                });

                                exclude_rows(rowIDsInclude, rowIDsExclude);
                                t.table().ajax.reload();
                            });

                            $(document).on(""change"", "".exclude_tgi"", function (e) {
                           ");
            WriteLiteral(@"     e.preventDefault();

                                var rowIDsInclude = Array();
                                t.table().rows().every(function (rowIdx, tableLoop, rowLoop) {
                                    var d = this.data();
                                    if (!$(""#"" + $(d.EXCLUDE).find("".exclude_tgi"").attr(""id"")).is("":checked"")) rowIDsInclude.push($(d.EXCLUDE).find("".exclude_tgi"").attr(""id""));
                                });

                                var rowIDsExclude = Array();

                                if ($(this).is("":checked"")) rowIDsExclude.push($(this).attr(""id""));

                                exclude_rows(rowIDsInclude, rowIDsExclude);
                            });


                            //t.buttons().container().appendTo($('#buttoinss'));

                            parent.$(""body"").trigger(""table_loaded"");
                        },
                        select: false, /*{
                            style: 'os',
             ");
            WriteLiteral("               selector: \'td:first-child\'\r\n                        },*/\r\n                        order: [[");
            EndContext();
            BeginContext(15213, 33, false);
#line 280 "C:\Users\user\Desktop\Androtomist\App\Views\Shared\Components\DataTableComponent\Default.cshtml"
                            Write(Html.Raw(Model.DEFAULT_ORDER_COL));

#line default
#line hidden
            EndContext();
            BeginContext(15246, 3, true);
            WriteLiteral(", \'");
            EndContext();
            BeginContext(15250, 33, false);
#line 280 "C:\Users\user\Desktop\Androtomist\App\Views\Shared\Components\DataTableComponent\Default.cshtml"
                                                                 Write(Html.Raw(Model.DEFAULT_ORDER_DIR));

#line default
#line hidden
            EndContext();
            BeginContext(15283, 2413, true);
            WriteLiteral(@"']],
                        drawCallback: function (settings) {
                            $('#check_all').prop('checked', false);
                        }
                    });

                    $(document).on(""change"", "".m-group-checkable"", function () {
                        var e = $(""#m_table_1"").find(""td:first-child .m-checkable""),
                            a = $(this).is("":checked"");
                        $(e).each(function () {
                            a ? ($(this).prop(""checked"", !0), $(this).closest(""tr"").addClass(""selected""), t.table().rows().select()) : ($(this).prop(""checked"", !1), $(this).closest(""tr"").removeClass(""selected""), t.table().rows().deselect())
                        });
                    });


                    t.on(""change"", ""tbody tr .m-checkbox"", function () {
                        if ($(this).find(""input"").is("":checked"")) {
                            $(this).closest(""tr"").addClass(""selected"");
                            t.table().rows($");
            WriteLiteral(@"(this).closest(""tr"")).select();
                        }
                        else {
                            $(this).closest(""tr"").removeClass(""selected"");
                            t.table().rows($(this).closest(""tr"")).deselect();
                        }
                    })

                    $(t).trigger(""destroy.dtSelect"");

                    var startAjax = performance.now();
                    $(document).on('preXhr.dt', function (e, settings, data) {
                        startAjax = performance.now();
                        $timeout_load_ajax = setTimeout(function () {
                            parent.$('body').trigger('startAjax');
                        }, 400);
                    });

                    $(document).on('xhr.dt draw.dt', function (e, settings, data) {
                        clearTimeout($timeout_load_ajax);
                        parent.$('body').trigger('endAjax');
                        parent.$(""body"").trigger(""table_loaded"");

");
            WriteLiteral(@"                        var endAjax = performance.now();
                        $("".dataTables_info"").find(""#time_took"").remove();
                        $("".dataTables_info"").append(""<span id=\""time_took\"" style=\""float: right;\"">"" + ""Took "" + Math.round((endAjax - startAjax) / 1000, 2) + "" secs"" + ""</span>"");
                    });

                    ");
            EndContext();
            BeginContext(17697, 127, false);
#line 326 "C:\Users\user\Desktop\Androtomist\App\Views\Shared\Components\DataTableComponent\Default.cshtml"
               Write(Html.Raw(string.Join("", Model.COLUMNS.ToList().Select((x, i) => " $(t.column(" + i + ").footer()).text('" + x.TITLE + "');"))));

#line default
#line hidden
            EndContext();
            BeginContext(17824, 314, true);
            WriteLiteral(@"
                    $(""#table_container"").removeClass(""d-none"");
                }
            };
        }();


        function exclude_rows(rowIDsInclude, rowIDsExclude) {
            var table = $(""#m_table_1"").DataTable();

            show_wait();
            $.post(""/ajax/datatable/excluderows/");
            EndContext();
            BeginContext(18140, 16, false);
#line 337 "C:\Users\user\Desktop\Androtomist\App\Views\Shared\Components\DataTableComponent\Default.cshtml"
                                            Write(Model.TABLE_TYPE);

#line default
#line hidden
            EndContext();
            BeginContext(18157, 10, true);
            WriteLiteral("?uniqueId=");
            EndContext();
            BeginContext(18169, 15, false);
#line 337 "C:\Users\user\Desktop\Androtomist\App\Views\Shared\Components\DataTableComponent\Default.cshtml"
                                                                         Write(Model.UNIQUE_ID);

#line default
#line hidden
            EndContext();
            BeginContext(18185, 1437, true);
            WriteLiteral(@""", { rowIDsInclude: JSON.stringify(rowIDsInclude), rowIDsExclude: JSON.stringify(rowIDsExclude) }, function (data) {
                if (data[""result""]) {
                    swal.close();
                } else {
                    table.ajax.reload();
                    show_error(""Cannot exclude row."", data[""msg""]);
                }
            }, 'json')
            .done(function () {
                var evt = new CustomEvent('RowsExcluded', { detail: { getyears: 0 } });
                window.dispatchEvent(evt);
            })
            .fail(function () {
                show_error(""Cannot exclude rows."", ""Something went wrong"");
            });
        }




        function clone_rows(rowIDs) {
            var table = $(""#m_table_1"").DataTable();

            swal({
                type: 'question',
                title: ""Remove selected rows?"",
                html: ""Are you sure you want to clone this rows?"",
                customClass: 'epd_alert',
              ");
            WriteLiteral(@"  showCancelButton: true,
                confirmButtonColor: '#5adfc5',
                cancelButtonColor: '#dc3545',
                confirmButtonText: 'Confirm',
                focusConfirm: false,
                allowEnterKey: false
            }).then(function (result) {
                if (result.value) {

                    show_wait();
                    $.post(""/ajax/datatable/clonerows/");
            EndContext();
            BeginContext(19624, 16, false);
#line 375 "C:\Users\user\Desktop\Androtomist\App\Views\Shared\Components\DataTableComponent\Default.cshtml"
                                                  Write(Model.TABLE_TYPE);

#line default
#line hidden
            EndContext();
            BeginContext(19641, 10, true);
            WriteLiteral("?uniqueId=");
            EndContext();
            BeginContext(19653, 15, false);
#line 375 "C:\Users\user\Desktop\Androtomist\App\Views\Shared\Components\DataTableComponent\Default.cshtml"
                                                                               Write(Model.UNIQUE_ID);

#line default
#line hidden
            EndContext();
            BeginContext(19669, 1576, true);
            WriteLiteral(@""", { rowIDs: JSON.stringify(rowIDs) }, function (data) {
                        if (data[""result""]) {
                            swal({
                                type: 'success',
                                html: data[""msg""]
                            }).then(function (result) {
                                table.ajax.reload();
                            });
                        } else {
                            table.ajax.reload();
                            show_error(""Cannot clone row."", data[""msg""]);
                        }
                    }, 'json').fail(function () {
                        show_error(""Cannot clone rows."", ""Something went wrong"");
                    });
                }
            });
        }



        function remove_rows(rowIDs) {
            var table = $(""#m_table_1"").DataTable();

            swal({
                type: 'question',
                title: ""Remove selected rows?"",
                html: ""Are you sure you ");
            WriteLiteral(@"want to remove this rows?<br /><strong>This action cannot be undone!</strong>"",
                customClass: 'epd_alert',
                showCancelButton: true,
                confirmButtonColor: '#5adfc5',
                cancelButtonColor: '#dc3545',
                confirmButtonText: 'Confirm',
                focusConfirm: false,
                allowEnterKey: false
            }).then(function (result) {
                if (result.value) {

                    show_wait();
                    $.post(""/ajax/datatable/removerows/");
            EndContext();
            BeginContext(21247, 16, false);
#line 414 "C:\Users\user\Desktop\Androtomist\App\Views\Shared\Components\DataTableComponent\Default.cshtml"
                                                   Write(Model.TABLE_TYPE);

#line default
#line hidden
            EndContext();
            BeginContext(21264, 10, true);
            WriteLiteral("?uniqueId=");
            EndContext();
            BeginContext(21276, 15, false);
#line 414 "C:\Users\user\Desktop\Androtomist\App\Views\Shared\Components\DataTableComponent\Default.cshtml"
                                                                                Write(Model.UNIQUE_ID);

#line default
#line hidden
            EndContext();
            BeginContext(21292, 2273, true);
            WriteLiteral(@""", { rowIDs: JSON.stringify(rowIDs) }, function (data) {
                        if (data[""result""]) {
                            swal({
                                type: 'success',
                                html: data[""msg""]
                            }).then(function (result) {
                                table.ajax.reload();
                            });
                        } else {
                            table.ajax.reload();
                            show_error(""Cannot remove row."", data[""msg""]);
                        }
                    }, 'json').fail(function () {
                        show_error(""Cannot remove rows."", ""Something went wrong"");
                    });
                }
            });
        }

        function get_all_columns() {
            var json = {};
            var all_columns = [];

            $("".m_table_1:not(#m_table_1) tr.filter .m-input"").each(function () {
                var $elem = {};
                $elem[""");
            WriteLiteral(@"column_name""] = $(this).data(""column_name"");
                $elem[""filter_vals""] = $(this).select2(""data"");
                $(this).find('option[data-select2-tag!=""true""]').each(function () {
                    var $tag = $(this);
                    var $result = $.grep($elem[""filter_vals""], function (e) { return e.id === $tag.val(); });
                    if ($result.length > 0) $result[0].is_tag = 0;
                });
                $(this).find('option[data-select2-tag=""true""]').each(function () {
                    var $tag = $(this);
                    var $result = $.grep($elem[""filter_vals""], function (e) { return e.id === $tag.val(); });
                    if ($result.length > 0) $result[0].is_tag = 1;
                });
                all_columns.push($elem);
            });

            json[""all_columns""] = all_columns;

            return encodeURIComponent(JSON.stringify(json));
         }


        var query = {};

        var select_options_datahk = {
       ");
            WriteLiteral("     dropdownAutoWidth: \'true\',\r\n            ajax: {\r\n                contentType: \"application/x-www-form-urlencoded; charset=utf-8\",\r\n                type: \"POST\",\r\n                url:\"/ajax/datatable/getcolumns/?uniqueId=");
            EndContext();
            BeginContext(23567, 15, false);
#line 467 "C:\Users\user\Desktop\Androtomist\App\Views\Shared\Components\DataTableComponent\Default.cshtml"
                                                      Write(Model.UNIQUE_ID);

#line default
#line hidden
            EndContext();
            BeginContext(23583, 13, true);
            WriteLiteral("&extraFilter=");
            EndContext();
            BeginContext(23598, 18, false);
#line 467 "C:\Users\user\Desktop\Androtomist\App\Views\Shared\Components\DataTableComponent\Default.cshtml"
                                                                                     Write(Model.EXTRA_FILTER);

#line default
#line hidden
            EndContext();
            BeginContext(23617, 329, true);
            WriteLiteral(@""",
                dataType: 'json',
                delay: 250,
                data: function (params) {
                    return {
                        q: params.term,
                        page: params.page,
                        column_name: $(this).data(""column_name""),
                        tabletype: """);
            EndContext();
            BeginContext(23947, 26, false);
#line 475 "C:\Users\user\Desktop\Androtomist\App\Views\Shared\Components\DataTableComponent\Default.cshtml"
                               Write(Html.Raw(Model.TABLE_TYPE));

#line default
#line hidden
            EndContext();
            BeginContext(23973, 2407, true);
            WriteLiteral(@""",
                        json: get_all_columns()
                    };
                },
                processResults: function (data, params) {
                    params.page = params.page || 1;

            var json_res = data;
            if(!(typeof data === 'object')) json_res = JSON.parse(data);

            return {
                results: json_res.items,
                            pagination: {
                    more: (params.page * json_res.page_length) < json_res.total_count
                            }
                    };
                },
                    cache: false
                },
                minimumInputLength: 0,
                allowClear: false,
                tags: true,
                placeholder: """",
                templateResult: function (item) {
            if (item.loading) {
                return item.text;
            }

            var term = query.term || '';
            var $result = markMatch(item.text, term);

      ");
            WriteLiteral(@"      return $result;
            },
                templateSelection: function (item) {

            return item.id;
            },
                language: {
                    searching: function (params) {
            // Intercept the query as it is happening
            query = params;

            // Change this to be appropriate for your application
            return 'Searching . . .';
            }
            }
        };


        function markMatch(text, term) {
            // Find where the match is
            var match = text.toUpperCase().indexOf(term.toUpperCase());

            var $result = $('<span></span>');

            // If there is no match, move on
            if (match < 0) {
                return $result.text(text);
            }

                // Put in whatever text is before the match
                $result.text(text.substring(0, match));

            // Mark the match
            var $match = $('<span class=""select2-rendered__match""></spa");
            WriteLiteral(@"n>');
                $match.text(text.substring(match, match + term.length));

                // Append the matching text
                $result.append($match);

                // Put in whatever is after the match
                $result.append(text.substring(match + term.length));

            return $result;
        }



    </script>
");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<Androtomist.Models.Database.Datatables.DataTableHtml> Html { get; private set; }
    }
}
#pragma warning restore 1591
